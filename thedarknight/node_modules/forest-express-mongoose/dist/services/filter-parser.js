"use strict";

var _interopRequireDefault = require("babel-runtime/helpers/interopRequireDefault");

var _lodash = _interopRequireDefault(require("lodash"));

var _forestExpress = _interopRequireDefault(require("forest-express"));

var _operatorValueParser = _interopRequireDefault(require("./operator-value-parser"));

var _schema = _interopRequireDefault(require("../utils/schema"));

function FilterParser(model, opts, timezone) {
  var schema = _forestExpress.default.Schemas.schemas[_schema.default.getModelName(model)];

  this.perform = function (key, values) {
    var conditions = [];
    var fieldValues = key.split(':');
    var fieldName = fieldValues[0];
    var subfieldName = fieldValues[1];

    var field = _lodash.default.find(schema.fields, {
      field: fieldName
    });

    var isEmbeddedField = !!field.type.fields;

    if (subfieldName && !isEmbeddedField) {
      return [];
    }

    values.split(',').forEach(function (value) {
      var condition = {};
      var filter = new _operatorValueParser.default(opts, timezone).perform(model, key, value);

      if (isEmbeddedField) {
        condition["".concat(fieldName, ".").concat(subfieldName)] = filter;
      } else {
        condition[key] = filter;
      }

      conditions.push(condition);
    });
    return conditions;
  };
}

module.exports = FilterParser;